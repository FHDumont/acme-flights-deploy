version: "3.7"

services:
  ########################################################
  ### LOADERS
  ########################################################

  af-loader-basic:
    container_name: af-loader-basic
    restart: on-failure
    image: fernandodumont/acme-flights-loaders:3.5
    environment:
      - ENABLE_BASE_LOAD=1
    env_file: ./appdynamics/controller.env
    volumes:
      - ./loaders/base-load.yml:/app/base-load/base-load.yml
      # - ./loaders/loader.index.js:/app/base-load/index.js

  af-loader-use-case:
    container_name: af-loader-use-case
    restart: on-failure
    image: fernandodumont/acme-flights-loaders:3.5
    environment:
      - ENABLE_USE_CASES_LOAD=1
    env_file: ./appdynamics/controller.env
    volumes:
      - ./loaders/use-cases.yml:/app/use-cases/use-cases.yml

  ########################################################
  ### NGINX
  ########################################################

  af-web:
    image: fernandodumont/acme-flights-web:3.0
    container_name: af-web
    restart: on-failure
    expose:
      - 8154
    ports:
      - 8154:8154
    volumes:
      - ./web/appd.js:/usr/share/nginx/html/assets/appd.js
      - ./web/default.conf:/etc/nginx/conf.d/default.conf
      - ./web/use-cases.json:/usr/share/nginx/html/assets/use-cases.json
      - ./nginx/logs/access.log:/var/log/nginx/access.log
      - ./nginx/logs/error.log:/var/log/nginx/error.log
      - type: bind
        source: ./appdynamics/opentelemetry_module.conf
        target: /opt/opentelemetry_module.conf

  ########################################################
  ### JAVA SERVICES
  ########################################################

  af-api-manager:
    container_name: af-api-manager
    restart: on-failure
    image: fernandodumont/acme-flights-java-services:3.5
    expose:
      - 8001
    ports:
      - 8001:8080
    env_file: ./appdynamics/controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=api-manager
      - APPDYNAMICS_AGENT_NODE_NAME=api-manager-01
      - JMX_REMOTE_PORT=9091
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - java-agent-acme:/opt/appdynamics/java-agent/

  af-internal-services:
    container_name: af-internal-services
    restart: on-failure
    image: fernandodumont/acme-flights-java-services:3.5
    env_file: ./appdynamics/controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=internal-services
      - APPDYNAMICS_AGENT_NODE_NAME=internal-services-01
      - JMX_REMOTE_PORT=9092
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - java-agent-acme:/opt/appdynamics/java-agent/

  af-external-services:
    container_name: af-external-services
    restart: on-failure
    image: fernandodumont/acme-flights-java-services:3.5
    env_file: ./appdynamics/controller.env
    environment:
      - AUDIT=true
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=external-services
      - APPDYNAMICS_AGENT_NODE_NAME=external-services-01
      - JMX_REMOTE_PORT=9093
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - java-agent-acme:/opt/appdynamics/java-agent/

  ########################################################
  ### BACKENDS
  ########################################################

  af-mongo:
    image: fernandodumont/acme-flights-mongo:3.5
    container_name: af-mongo
    restart: on-failure
    expose:
      - 27017
    ports:
      - 27017:27017

  # mongo-express:
  #   image: mongo-express:latest
  #   container_name: mongo-express
  #   restart: on-failure
  #   expose:
  #     - 8081
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - ME_CONFIG_MONGODB_URL=mongodb://af-mongo:27017

  af-mysql:
    image: fernandodumont/acme-flights-mysql:3.5
    container_name: af-mysql
    restart: on-failure
    expose:
      - 3306
    ports:
      - 3306:3306

  af-ldap:
    image: bitnami/openldap:latest
    container_name: af-ldap
    restart: on-failure
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin1
      - LDAP_USERS=acmeflight
      - LDAP_PASSWORDS=acmeflight1
    expose:
      - 1389
      - 1636
    ports:
      - 1389:1389
      - 1636:1636

  ########################################################
  ### OTEL COLLECTORS
  ########################################################

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   container_name: jaeger
  #   ports:
  #     - "6831:6831/udp"
  #     - "16686:16686"
  #     - "14250:14250"

  # OTel Collector
  # af-otel-collector:
  #   image: otel/opentelemetry-collector-contrib:latest
  #   container_name: af-otel-collector
  #   command: "--config=/etc/otel-collector-config.yaml ${OTELCOL_ARGS}"
  #   # Change the "source" path below to swap out collector config files!
  #   volumes:
  #     - type: bind
  #       source: ./appdynamics/otel-collector-config.yaml
  #       target: /etc/otel-collector-config.yaml
  #   ports:
  #     - "1888:1888"   # pprof extension
  #     - "8888:8888"   # Prometheus metrics exposed by the collector
  #     - "8889:8889"   # Prometheus exporter metrics
  #     - "13133:13133" # health_check extension
  #     - "4317:4317"   # OTLP gRPC receiver
  #     - "55670:55679" # zpages extension
  #     - "55681:55681" # http
  #   environment:
  #     # uses .env file
  #     X_API_KEY: "456096fd6e2feda8f85848c529a3acd85c035cabfe02a9d7df65c501a9a20c8e"
  #   depends_on:
  #     - jaeger

  ########################################################
  ### Mock Services
  ########################################################

  sap-services:
    container_name: sap-services
    restart: on-failure
    image: fernandodumont/acme-flights-java-services:3.5

  finance-services:
    container_name: finance-services
    restart: on-failure
    image: fernandodumont/acme-flights-java-services:3.5

  ########################################################
  ### AppDynamics
  ########################################################

  java-agent-acme:
    container_name: java-agent-acme
    image: appdynamics/java-agent:latest
    volumes:
      - java-agent-acme:/opt/appdynamics
      # - ./ca.crt:/opt/appdynamics/ca.crt:ro

  # java-agent-acme:
  #   container_name: java-agent-acme
  #   image: appdynamics/java-agent:latest
  #   volumes:
  #     - java-agent-acme:/opt/appdynamics
  #     - ./ca.crt:/tmp/ca.crt:ro
  #   entrypoint: >
  #     /bin/sh -c "
  #     keytool -import -trustcacerts -noprompt \
  #       -alias appd-ca \
  #       -file /tmp/ca.crt \
  #       -keystore $JAVA_HOME/lib/security/cacerts \
  #       -storepass changeit
  #     "

  # af-machine-agent:
  #   build:
  #     context: ./
  #     dockerfile: ./machine-agent/Dockerfile
  #   container_name: af-machine-agent
  #   image: appdynamics/machine-agent-netviz:25.4.0.4712
  #   env_file: ./appdynamics/controller.env
  #   network_mode: "host"
  #   environment:
  #     - APPDYNAMICS_SIM_ENABLED=true
  #     - APPDYNAMICS_DOCKER_ENABLED=true
  #     - APPDYNAMICS_AGENT_ENABLE_CONTAINERIDASHOSTID=true
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /:/hostroot:ro
  #     - ./nginx/log:/opt/nginx/log
  #   cap_add:
  #     - NET_ADMIN
  #     - NET_RAW
  #   expose:
  #     - 3892
  #     - 9090

  af-machine-agent:
    container_name: af-machine-agent
    image: appdynamics/machine-agent-local:25.4.0.4712
    env_file: ./appdynamics/controller.env
    network_mode: "host"
    environment:
      - APPDYNAMICS_SIM_ENABLED=true
      - APPDYNAMICS_DOCKER_ENABLED=true
      - APPDYNAMICS_AGENT_ENABLE_CONTAINERIDASHOSTID=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostroot:ro
      - ./nginx/log:/opt/nginx/log
    cap_add:
      - NET_ADMIN
      - NET_RAW
    expose:
      - 3892
      - 9090

  af-database-agent:
    container_name: af-database-agent
    image: appdynamics/db-agent:latest
    env_file: ./appdynamics/controller.env
    environment:
      - APPDYNAMICS_DB_AGENT_NAME=ACME-Databases-01

volumes:
  java-agent-acme:

networks:
  default:
    # ipam:
    #   driver: default
    #   config:
    #     - subnet: 1.2.1.0/16
